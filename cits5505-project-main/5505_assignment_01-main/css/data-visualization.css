/* 技能雷达图样式 */
.radar-chart-container {
    position: relative;
    width: 100%;
    max-width: 500px;
    margin: 0 auto;
}

.skill-chart {
    position: relative;
    width: 100%;
    height: 400px;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 10px;
    padding: 20px;
    backdrop-filter: blur(10px);
}

/* 进度环样式 */
.progress-ring {
    position: relative;
    width: 120px;
    height: 120px;
}

.progress-ring__circle {
    transform: rotate(-90deg);
    transform-origin: 50% 50%;
    transition: all 0.3s ease;
}

/* 动态数据流样式 */
.data-stream {
    position: relative;
    height: 60px;
    background: linear-gradient(90deg, 
        rgba(0, 48, 135, 0.1),
        rgba(218, 170, 0, 0.1)
    );
    overflow: hidden;
    border-radius: 8px;
}

.data-point {
    position: absolute;
    width: 4px;
    height: 100%;
    background: var(--primary-color);
    opacity: 0.6;
    transform: translateX(-50%);
    transition: transform 0.3s ease;
}

/* GitHub贡献热图样式 */
.github-contributions {
    display: grid;
    grid-template-columns: repeat(52, 1fr);
    gap: 2px;
    padding: 10px;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 8px;
}

.contribution-day {
    aspect-ratio: 1;
    border-radius: 2px;
    transition: transform 0.2s ease;
}

.contribution-day:hover {
    transform: scale(1.2);
}

/* 交互式时间轴样式 */
.interactive-timeline {
    position: relative;
    padding: 20px 0;
}

.timeline-point {
    position: relative;
    padding: 15px;
    margin: 10px 0;
    background: var(--glass-bg);
    border-radius: 8px;
    transition: all 0.3s ease;
    cursor: pointer;
}

.timeline-point:hover {
    transform: translateX(10px);
    background: rgba(255, 255, 255, 0.15);
}

/* 动画效果 */
@keyframes dataFlow {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

.animate-data-flow {
    animation: dataFlow 2s linear infinite;
}

.pulse {
    animation: pulse 2s ease-in-out infinite;
}
